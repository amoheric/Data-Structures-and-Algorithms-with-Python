from graphviz import Digraph

class SurgicalWorkflow:
    def __init__(self):
        self.steps = []
        self.workflow_graph = Digraph('SurgicalWorkflow', format='png')

    def add_step(self, step_name, action):
        self.steps.append({'step_name': step_name, 'action': action})
        self.workflow_graph.node(step_name, action)

    def visualize_workflow(self):
        self.workflow_graph.render('surgical_workflow', view=True, format='png', cleanup=True)

    def execute_workflow(self):
        for step in self.steps:
            print(f"Step: {step['step_name']}")
            print(f"Action: {step['action']}")
            
            # Simulating user interaction (pressing Enter to proceed to the next step)
            input("Press Enter to proceed...\n")

# Example Usage:
surgical_app = SurgicalWorkflow()

# Define the surgical workflow steps
surgical_app.add_step("Step 1", "Prepare patient for surgery")
surgical_app.add_step("Step 2", "Sterilize surgical area")
surgical_app.add_step("Step 3", "Administer anesthesia")
surgical_app.add_step("Step 4", "Make incision")
surgical_app.add_step("Step 5", "Perform surgery steps")
surgical_app.add_step("Step 6", "Close incision")

# Visualize the surgical workflow
surgical_app.visualize_workflow()

# Execute the surgical workflow with interactive steps
surgical_app.execute_workflow()
